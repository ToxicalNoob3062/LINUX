to see all available shells :
cat /etc/shells
to change the shells
chsh -s /bin/shellpath
to see the default shell of each user 
cat /etc/passwd 

there are some speacial parameters in bash scripts, 
$? -> execution result of last executed command on the foreground
$0 -> scripts name
$# -> number of parameters
$$ -> process id
$@ and $* -> represents all suplied arguement in a string format.
run (~/Compilations/Bash/pp.sh a b c 1 2 3) to see a live demo.


                  lesson2: { $@ vs $*}
($@ =$*)-> "$1 $2 $3": (concat and split)
0)script-> touch $@
1)command->script "my bom" "boot" "bum boo"
2)execution->touch $@ -> touch "my boom boot bum boo" 
3)split-> touch "my" "boom" "boot" "bum" "boo"
4)result-> will create 5 files in current dir.

("$@")-> "$1" "$2" "$3" : (use the splited words directly).
4)res: will create 3 files in current dir.

("$*")-> "$1,$2,$3" : (concats using IFS variable):
!!here IFS=, in script.
4)res:will create 1 file in current dir.

#to directly execute bash files by their names from any place add the bash dir which contains bash files to the PATH varibale.
you can do this by adding a line :
(export PATH="dir-path:$PATH") try to put the dir-path an absolute one.

SHEBANG or #!
this is used to specify the compiler to run an executable script if not specified it will consider the default bash.
(#!/bin/bash executable) or you can add (#!/bin/bash) at top of the executable file to decide it will use which compiler to run that executable file.

#comments
normal format-> # this is my comment
multiline comment like below, 
: ' bla bla black
123456 hjlk
gfshg
'

running a script with (source) command will set the variables inside the script to current shell session and you can acces those variable from terminal doin (echo $var) but running directly will not save the varibles in shell environment with is more preferable in case of programming. (.) command is same as (source) command.


Do not need executable permissions:(if you directly write the compiler name):
bash file
python3 file
source file


